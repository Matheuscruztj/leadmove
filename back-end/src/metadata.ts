/* eslint-disable */
export default async () => {
    const t = {
        ["./user/entities/user.entity"]: await import("./modules/user/entities/user.entity"),
        ["./user/entities/user-address.entity"]: await import("./modules/user/entities/user-address.entity"),
        ["./user/entities/video-schedule.entity"]: await import("./modules/user/entities/video-schedule.entity"),
        ["./user/entities/video.entity"]: await import("./modules/user/entities/video.entity")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./modules/user/entities/user-address.entity"), { "UserAddress": { id: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, streetAddress: { required: true, type: () => String }, addressNumber: { required: true, type: () => String }, addressComplement: { required: true, type: () => String }, neighborhood: { required: true, type: () => String }, zipCode: { required: true, type: () => String }, city: { required: true, type: () => String }, state: { required: true, type: () => String }, country: { required: true, type: () => String }, isPrimaryAddress: { required: true, type: () => Boolean }, user: { required: false, type: () => t["./user/entities/user.entity"].User } } }], [import("./modules/user/entities/user.entity"), { "User": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, whatsapp_number: { required: true, type: () => String, nullable: true }, instagram: { required: true, type: () => String, nullable: true }, email: { required: true, type: () => String, nullable: true }, birth_date: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date }, password: { required: true, type: () => String, nullable: true }, addresses: { required: false, type: () => [t["./user/entities/user-address.entity"].UserAddress] }, videoSchedules: { required: false, type: () => [t["./user/entities/video-schedule.entity"].VideoSchedule] } } }], [import("./modules/user/entities/video.entity"), { "Video": { id: { required: true, type: () => Number }, videoId: { required: true, type: () => String }, videoDescription: { required: true, type: () => String }, questionLayoutId: { required: true, type: () => String }, temporaryLocation: { required: true, type: () => String }, finalLocation: { required: true, type: () => String }, externalId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date }, removedBySystem: { required: true, type: () => Boolean }, removedByUser: { required: true, type: () => Boolean }, videoSchedules: { required: false, type: () => [t["./user/entities/video-schedule.entity"].VideoSchedule] } } }], [import("./modules/user/entities/video-schedule.entity"), { "VideoSchedule": { id: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, videoId: { required: true, type: () => Number }, appointmentDate: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date }, user: { required: false, type: () => t["./user/entities/user.entity"].User }, video: { required: false, type: () => t["./user/entities/video.entity"].Video } } }], [import("./modules/user/controllers/user.controller.dto"), { "ICreateUserUsecaseDTO": { name: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 6 } } }]], "controllers": [[import("./modules/user/controllers/user.controller"), { "UserController": { "createUser": { type: Object } } }]] } };
};